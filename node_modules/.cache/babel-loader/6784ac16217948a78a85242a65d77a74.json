{"ast":null,"code":"var _jsxFileName = \"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/pages/check-list.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport CheckboxInput from \"components/FormElements/CheckboxInput\";\nimport { BodyContainer, FormBody } from \"styles/pages/CheckList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckList = () => {\n  _s();\n\n  const {\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onBlur\",\n    // resolver: yupResolver(VALIDATION_SCHEMA),\n    shouldFocusError: true\n  });\n  const taskList = ['Task 1', 'Task 2', 'Task 3', 'Task 4', 'Task 5'];\n\n  const subList = index => taskList.map((task, subIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"subTask\" + index + '' + subIndex,\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(CheckboxInput, {\n            className: \"checkBox\",\n            label: task,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, subIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  });\n\n  const lists = taskList.map((task, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"task\" + index,\n        control: control,\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(CheckboxInput, {\n            className: \"checkBox\",\n            label: task,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: subList(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  });\n\n  const formFields = () => {\n    return /*#__PURE__*/_jsxDEV(FormBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BodyContainer, {\n      children: formFields()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(CheckList, \"gn2C1NHfCcco5eDy0t3xSZofHWE=\", false, function () {\n  return [useForm];\n});\n\n_c = CheckList;\nexport default CheckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckList\");","map":{"version":3,"names":["React","useForm","Controller","CheckboxInput","BodyContainer","FormBody","CheckList","setValue","handleSubmit","formState","errors","control","mode","reValidateMode","shouldFocusError","taskList","subList","index","map","task","subIndex","field","lists","formFields"],"sources":["/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/pages/check-list.jsx"],"sourcesContent":["import React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport CheckboxInput from \"components/FormElements/CheckboxInput\";\n\nimport {BodyContainer, FormBody} from \"styles/pages/CheckList\";\n\nconst CheckList = () => {\n\n  const {\n    setValue,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onBlur\",\n    // resolver: yupResolver(VALIDATION_SCHEMA),\n    shouldFocusError: true,\n  });\n\n    const taskList = ['Task 1','Task 2','Task 3','Task 4','Task 5'];\n    const subList =(index)=> taskList.map((task,subIndex)=>{\n        return <div key={subIndex}>\n            <Controller\n                name={\"subTask\"+index+''+subIndex}\n                control={control}\n                render={({ field }) => (\n                    <CheckboxInput\n                        className=\"checkBox\"\n                        label={task}\n                        {...field}\n                    />\n                )}\n            />\n        </div>;\n    });\n\n    const lists = taskList.map((task,index)=>{\n        return <div key={index}>\n                    <Controller\n                        name={\"task\"+index}\n                        control={control}\n                        render={({ field }) => (\n                            <CheckboxInput\n                                className=\"checkBox\"\n                                label={task}\n                                {...field}\n                            />\n                        )}\n                    />\n                <div>\n                 {subList(index)}\n                </div>\n            </div>;\n    });\n    const formFields = () => {\n        return (\n            <FormBody>\n                <div>\n                    {lists}\n                </div>\n            </FormBody>\n        );\n    };\n\n    return (\n        <>\n          <BodyContainer>{formFields()}</BodyContainer>         \n        </>\n    );\n}\nexport default CheckList;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AAEA,OAAOC,aAAP,MAA0B,uCAA1B;AAEA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,wBAAtC;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEtB,MAAM;IACJC,QADI;IAEJC,YAFI;IAGJC,SAAS,EAAE;MAAEC;IAAF,CAHP;IAIJC;EAJI,IAKFV,OAAO,CAAC;IACVW,IAAI,EAAE,UADI;IAEVC,cAAc,EAAE,QAFN;IAGV;IACAC,gBAAgB,EAAE;EAJR,CAAD,CALX;EAYE,MAAMC,QAAQ,GAAG,CAAC,QAAD,EAAU,QAAV,EAAmB,QAAnB,EAA4B,QAA5B,EAAqC,QAArC,CAAjB;;EACA,MAAMC,OAAO,GAAGC,KAAD,IAAUF,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAMC,QAAN,KAAiB;IACnD,oBAAO;MAAA,uBACH,QAAC,UAAD;QACI,IAAI,EAAE,YAAUH,KAAV,GAAgB,EAAhB,GAAmBG,QAD7B;QAEI,OAAO,EAAET,OAFb;QAGI,MAAM,EAAE;UAAA,IAAC;YAAEU;UAAF,CAAD;UAAA,oBACJ,QAAC,aAAD;YACI,SAAS,EAAC,UADd;YAEI,KAAK,EAAEF,IAFX;YAAA,GAGQE;UAHR;YAAA;YAAA;YAAA;UAAA,QADI;QAAA;MAHZ;QAAA;QAAA;QAAA;MAAA;IADG,GAAUD,QAAV;MAAA;MAAA;MAAA;IAAA,QAAP;EAaH,CAdwB,CAAzB;;EAgBA,MAAME,KAAK,GAAGP,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAMF,KAAN,KAAc;IACrC,oBAAO;MAAA,wBACK,QAAC,UAAD;QACI,IAAI,EAAE,SAAOA,KADjB;QAEI,OAAO,EAAEN,OAFb;QAGI,MAAM,EAAE;UAAA,IAAC;YAAEU;UAAF,CAAD;UAAA,oBACJ,QAAC,aAAD;YACI,SAAS,EAAC,UADd;YAEI,KAAK,EAAEF,IAFX;YAAA,GAGQE;UAHR;YAAA;YAAA;YAAA;UAAA,QADI;QAAA;MAHZ;QAAA;QAAA;QAAA;MAAA,QADL,eAYC;QAAA,UACEL,OAAO,CAACC,KAAD;MADT;QAAA;QAAA;QAAA;MAAA,QAZD;IAAA,GAAUA,KAAV;MAAA;MAAA;MAAA;IAAA,QAAP;EAgBH,CAjBa,CAAd;;EAkBA,MAAMM,UAAU,GAAG,MAAM;IACrB,oBACI,QAAC,QAAD;MAAA,uBACI;QAAA,UACKD;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH,CARD;;EAUA,oBACI;IAAA,uBACE,QAAC,aAAD;MAAA,UAAgBC,UAAU;IAA1B;MAAA;MAAA;MAAA;IAAA;EADF,iBADJ;AAKH,CAhED;;GAAMjB,S;UAOAL,O;;;KAPAK,S;AAiEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}