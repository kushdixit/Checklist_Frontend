{"ast":null,"code":"import _objectSpread from\"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useForm,Controller}from\"react-hook-form\";import CheckboxInput from\"components/FormElements/CheckboxInput\";// import AlertModal from 'components/AlertModal';\nimport{useDispatch}from'react-redux';import{BodyContainer,FormBody,TaskList}from\"styles/pages/CheckList\";import{getChecklistBySubcategory}from\"redux/actions/checklist\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var CheckList=function CheckList(){var dispatch=useDispatch();var _useState=useState(),_useState2=_slicedToArray(_useState,2),getResponse=_useState2[0],setResponse=_useState2[1];//   const [modal, setModal] = useState(false)\n//   const [modalContent, setModalContent] = useState('')\n//   const [modalLink, setModalLink] = useState('/')\n//   const toggleModal = () => setModal(!modal)\n//   let title = ''\nvar _useForm=useForm({mode:\"onSubmit\",reValidateMode:\"onBlur\",// resolver: yupResolver(VALIDATION_SCHEMA),\nshouldFocusError:true}),control=_useForm.control;useEffect(function(){fetchData();},[]);var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,_response$data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dispatch(getChecklistBySubcategory(1));case 2:response=_context.sent;if(response!==null&&response!==void 0&&response.error){console.log(\"response==\",response===null||response===void 0?void 0:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.message);// setModalContent(response?.data?.message)\n// setModalLink('')\n// toggleModal()\n}else{// API Success Response\nsetResponse(response===null||response===void 0?void 0:response.data);}case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref.apply(this,arguments);};}();//Sub Task List attached\nvar subList=function subList(index){var _getResponse$index;return(_getResponse$index=getResponse[index])===null||_getResponse$index===void 0?void 0:_getResponse$index.subTasks.map(function(task,subIndex){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Controller,{name:\"subTask\"+index+''+subIndex,control:control,render:function render(_ref2){var field=_ref2.field;return/*#__PURE__*/_jsx(CheckboxInput,_objectSpread({className:\"checkBox\",label:task===null||task===void 0?void 0:task.subTaskName},field));}})},subIndex);});};// Task List attached\nvar lists=getResponse===null||getResponse===void 0?void 0:getResponse.map(function(task,index){return/*#__PURE__*/_jsxs(TaskList,{children:[/*#__PURE__*/_jsx(Controller,{name:\"task\"+index,control:control,render:function render(_ref3){var field=_ref3.field;return/*#__PURE__*/_jsx(CheckboxInput,_objectSpread({className:\"checkBox\",label:task===null||task===void 0?void 0:task.taskName},field));}}),/*#__PURE__*/_jsx(\"div\",{style:{'padding-left':'90px'},children:subList(index)})]},index);});var formFields=function formFields(){return/*#__PURE__*/_jsx(FormBody,{children:/*#__PURE__*/_jsx(\"div\",{children:lists})});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(BodyContainer,{children:formFields()})});};export default CheckList;","map":{"version":3,"names":["React","useEffect","useState","useForm","Controller","CheckboxInput","useDispatch","BodyContainer","FormBody","TaskList","getChecklistBySubcategory","CheckList","dispatch","getResponse","setResponse","mode","reValidateMode","shouldFocusError","control","fetchData","response","error","console","log","data","message","subList","index","subTasks","map","task","subIndex","field","subTaskName","lists","taskName","formFields"],"sources":["/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/pages/check-list.jsx"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport CheckboxInput from \"components/FormElements/CheckboxInput\";\n// import AlertModal from 'components/AlertModal';\nimport { useDispatch } from 'react-redux';\nimport {BodyContainer, FormBody,TaskList} from \"styles/pages/CheckList\";\nimport {getChecklistBySubcategory} from \"redux/actions/checklist\"\n\nconst CheckList = () => {\n  const dispatch = useDispatch()\n  let [getResponse,setResponse]=useState()\n\n//   const [modal, setModal] = useState(false)\n//   const [modalContent, setModalContent] = useState('')\n//   const [modalLink, setModalLink] = useState('/')\n//   const toggleModal = () => setModal(!modal)\n//   let title = ''\n\n  const {\n    // setValue,\n    // handleSubmit,\n    // formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onBlur\",\n    // resolver: yupResolver(VALIDATION_SCHEMA),\n    shouldFocusError: true,\n  });\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    const response = await dispatch(getChecklistBySubcategory(1))\n    if(response?.error){\n        console.log(\"response==\",response?.data?.message)\n        // setModalContent(response?.data?.message)\n        // setModalLink('')\n        // toggleModal()\n    }else{  \n        // API Success Response\n        setResponse(response?.data)\n    }\n    \n  }\n  \n     //Sub Task List attached\n    const subList =(index)=> getResponse[index]?.subTasks.map((task,subIndex)=>{\n        return <div key={subIndex}>\n            <Controller\n                name={\"subTask\"+index+''+subIndex}\n                control={control}\n                render={({ field }) => (\n                    <CheckboxInput\n                        className=\"checkBox\"\n                        label={task?.subTaskName}\n                        {...field}\n                    />\n                )}\n            />\n        </div>;\n    });\n\n    // Task List attached\n    const lists = getResponse?.map((task,index)=>{\n        return <TaskList key={index}>\n                    <Controller\n                        name={\"task\"+index}\n                        control={control}\n                        render={({ field }) => (\n                            <CheckboxInput\n                                className=\"checkBox\"\n                                label={task?.taskName}\n                                {...field}\n                            />\n                        )}\n                    />\n                <div style={{'padding-left': '90px'}}>\n                 {subList(index)}\n                </div>\n            </TaskList>;\n    });\n    const formFields = () => {\n        return (\n            <FormBody>\n                <div>\n                    {lists}\n                </div>\n            </FormBody>\n        );\n    };\n\n    return (\n        <>\n          <BodyContainer>\n           {formFields()}\n          \n           {/* <AlertModal\n            className=\"AlertModalSection\"\n            isOpen={modal}\n            toggle={toggleModal}\n            title={title}\n            content={modalContent}\n            link={modalLink}\n            />    */}\n          </BodyContainer> \n               \n        </>\n    );\n}\nexport default CheckList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}