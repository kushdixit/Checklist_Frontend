{"ast":null,"code":"var _jsxFileName = \"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/components/FormElements/TextInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport EndIcon from 'assets/SVG/PasswordIconText';\nimport PasswordIconText from 'assets/SVG/PasswordIconText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TextInput = props => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-input-text\",\n    children: [/*#__PURE__*/_jsxDEV(Controller, {\n      render: _ref => {\n        let {\n          field: {\n            onChange,\n            value,\n            rules\n          }\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          className: props.disabled ? 'disabled' : '',\n          onChange: e => {\n            console.log(\"==\", e === null || e === void 0 ? void 0 : e.target.value);\n            props === null || props === void 0 ? void 0 : props.onChange(e);\n          },\n          onFocus: e => {\n            var _e$target;\n\n            if (props !== null && props !== void 0 && props.onFocus) props === null || props === void 0 ? void 0 : props.onFocus(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n          },\n          onBlur: e => {\n            var _e$target2;\n\n            if (props !== null && props !== void 0 && props.onBlur) props === null || props === void 0 ? void 0 : props.onBlur(e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n          },\n          type: !showPassword ? props.type : 'text',\n          placeholder: props.placeholder,\n          defaultValue: props === null || props === void 0 ? void 0 : props.defaultValue,\n          style: props === null || props === void 0 ? void 0 : props.style,\n          disabled: props.disabled,\n          value: (props === null || props === void 0 ? void 0 : props.value) || value,\n          rules: rules,\n          name: props === null || props === void 0 ? void 0 : props.name // maxlength={props?.maxlength}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this);\n      },\n      name: props === null || props === void 0 ? void 0 : props.name,\n      control: props.control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !showPassword ? props.type === 'password' && /*#__PURE__*/_jsxDEV(EndIcon, {\n        className: \"passwordIcon\",\n        onClick: () => {\n          setShowPassword(!showPassword);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this) : props.type === 'password' && /*#__PURE__*/_jsxDEV(PasswordIconText, {\n        className: \"passwordIcon\",\n        onClick: () => {\n          setShowPassword(!showPassword);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextInput, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = TextInput;\nexport default TextInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextInput\");","map":{"version":3,"names":["React","useState","Controller","EndIcon","PasswordIconText","TextInput","props","showPassword","setShowPassword","field","onChange","value","rules","disabled","e","console","log","target","onFocus","onBlur","type","placeholder","defaultValue","style","name","control"],"sources":["/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/components/FormElements/TextInput.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Controller } from 'react-hook-form'\nimport EndIcon from 'assets/SVG/PasswordIconText';\nimport PasswordIconText from 'assets/SVG/PasswordIconText';\n\nconst TextInput = (props) => {\n\n  const [showPassword, setShowPassword] = useState(false)\n  return (\n    <div className=\"app-input-text\">\n      <Controller\n        render={({ field: { onChange, value, rules } }) => (\n          <input\n            className={props.disabled ? 'disabled' : ''}\n            onChange={(e)=>{\n              console.log(\"==\",e?.target.value)\n              props?.onChange(e)\n            }}           \n            onFocus={(e) => {\n              if (props?.onFocus) props?.onFocus(e?.target?.value)\n            }}\n            onBlur={(e) => {\n              if (props?.onBlur) props?.onBlur(e?.target?.value)\n            }}\n            type={!showPassword ? props.type : 'text'}\n            placeholder={props.placeholder}\n            defaultValue={props?.defaultValue}\n            style={props?.style}\n            disabled={props.disabled}\n            value={props?.value || value}\n            rules={rules}\n            name={props?.name}\n            // maxlength={props?.maxlength}\n          />\n        )}\n        name={props?.name}\n        control={props.control}\n      />\n      <>\n        {!showPassword\n          ? props.type === 'password' && (\n              <EndIcon\n                className=\"passwordIcon\"\n                onClick={() => {\n                  setShowPassword(!showPassword)\n                }}\n              />\n            )\n          : props.type === 'password' && (\n              <PasswordIconText\n                className=\"passwordIcon\"\n                onClick={() => {\n                  setShowPassword(!showPassword)\n                }}\n              />\n            )}\n      </>\n    </div>\n  )\n}\n\nexport default TextInput\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}