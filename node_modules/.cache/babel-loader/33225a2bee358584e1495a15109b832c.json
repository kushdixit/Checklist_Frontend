{"ast":null,"code":"var _jsxFileName = \"/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/pages/check-list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport CheckboxInput from \"components/FormElements/CheckboxInput\";\nimport AlertModal from 'components/AlertModal';\nimport { useDispatch } from 'react-redux';\nimport { BodyContainer, FormBody } from \"styles/pages/CheckList\";\nimport { getChecklistBySubcategory } from \"redux/actions/checklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckList = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  let [getResponse, setResponse] = useState();\n  const [modal, setModal] = useState(false);\n  const [modalContent, setModalContent] = useState('');\n  const [modalLink, setModalLink] = useState('/');\n\n  const toggleModal = () => setModal(!modal);\n\n  let title = '';\n  const {\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    control\n  } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onBlur\",\n    // resolver: yupResolver(VALIDATION_SCHEMA),\n    shouldFocusError: true\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    const response = await dispatch(getChecklistBySubcategory(1));\n    console.log(\"response==\", response);\n\n    if (response !== null && response !== void 0 && response.error) {\n      var _response$data, _response$data2;\n\n      console.log(\"response==\", response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      setModalContent(response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.message);\n      setModalLink('');\n      toggleModal();\n    } else {\n      var _response$data3, _response$data4;\n\n      console.log(\"response==\", response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.message);\n      setModalContent(response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.message);\n      setModalLink('');\n      toggleModal();\n      setResponse(response);\n    }\n  };\n\n  const taskList = ['Task 1', 'Task 2', 'Task 3', 'Task 4', 'Task 5'];\n  const subTaskList = ['SubTask 1', 'SubTask 2', 'SubTask 3', 'SubTask 4', 'SubTask 5'];\n\n  const subList = index => subTaskList.map((task, subIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"subTask\" + index + '' + subIndex,\n        control: control,\n        render: _ref => {\n          let {\n            field\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(CheckboxInput, {\n            className: \"checkBox\",\n            label: task,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, subIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  });\n\n  const lists = taskList.map((task, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"task\" + index,\n        control: control,\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(CheckboxInput, {\n            className: \"checkBox\",\n            label: task,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          'padding-left': '90px'\n        },\n        children: subList(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  });\n\n  const formFields = () => {\n    return /*#__PURE__*/_jsxDEV(FormBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: lists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BodyContainer, {\n      children: formFields()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(CheckList, \"I0tVUyMI4ipEhUwuwdMsCRcpbhc=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = CheckList;\nexport default CheckList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckList\");","map":{"version":3,"names":["React","useEffect","useState","useForm","Controller","CheckboxInput","AlertModal","useDispatch","BodyContainer","FormBody","getChecklistBySubcategory","CheckList","dispatch","getResponse","setResponse","modal","setModal","modalContent","setModalContent","modalLink","setModalLink","toggleModal","title","setValue","handleSubmit","formState","errors","control","mode","reValidateMode","shouldFocusError","fetchData","response","console","log","error","data","message","taskList","subTaskList","subList","index","map","task","subIndex","field","lists","formFields"],"sources":["/Users/satvinder/Desktop/Projects/Checklist/Checklist/Checklist_Frontend/src/pages/check-list.jsx"],"sourcesContent":["import React,{useEffect,useState} from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\nimport CheckboxInput from \"components/FormElements/CheckboxInput\";\nimport AlertModal from 'components/AlertModal';\nimport { useDispatch } from 'react-redux';\nimport {BodyContainer, FormBody} from \"styles/pages/CheckList\";\nimport {getChecklistBySubcategory} from \"redux/actions/checklist\"\n\nconst CheckList = () => {\n  const dispatch = useDispatch()\n  let [getResponse,setResponse]=useState()\n\n  const [modal, setModal] = useState(false)\n  const [modalContent, setModalContent] = useState('')\n  const [modalLink, setModalLink] = useState('/')\n  const toggleModal = () => setModal(!modal)\n  let title = ''\n\n  const {\n    setValue,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onSubmit\",\n    reValidateMode: \"onBlur\",\n    // resolver: yupResolver(VALIDATION_SCHEMA),\n    shouldFocusError: true,\n  });\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n  const fetchData = async () => {\n    const response = await dispatch(getChecklistBySubcategory(1))\n    console.log(\"response==\",response)\n    if(response?.error){\n        console.log(\"response==\",response?.data?.message)\n        setModalContent(response?.data?.message)\n        setModalLink('')\n        toggleModal()\n    }else{\n        console.log(\"response==\",response?.data?.message)\n        setModalContent(response?.data?.message)\n        setModalLink('')\n        toggleModal()\n        setResponse(response)\n    }\n    \n  }\n    const taskList = ['Task 1','Task 2','Task 3','Task 4','Task 5'];\n    const subTaskList = ['SubTask 1','SubTask 2','SubTask 3','SubTask 4','SubTask 5'];\n    const subList =(index)=> subTaskList.map((task,subIndex)=>{\n        return <div key={subIndex}>\n            <Controller\n                name={\"subTask\"+index+''+subIndex}\n                control={control}\n                render={({ field }) => (\n                    <CheckboxInput\n                        className=\"checkBox\"\n                        label={task}\n                        {...field}\n                    />\n                )}\n            />\n        </div>;\n    });\n\n    const lists = taskList.map((task,index)=>{\n        return <div key={index}>\n                    <Controller\n                        name={\"task\"+index}\n                        control={control}\n                        render={({ field }) => (\n                            <CheckboxInput\n                                className=\"checkBox\"\n                                label={task}\n                                {...field}\n                            />\n                        )}\n                    />\n                <div style={{'padding-left': '90px'}}>\n                 {subList(index)}\n                </div>\n            </div>;\n    });\n    const formFields = () => {\n        return (\n            <FormBody>\n                <div>\n                    {lists}\n                </div>\n            </FormBody>\n        );\n    };\n\n    return (\n        <>\n          <BodyContainer>\n           {formFields()}\n          \n           {/* <AlertModal\n            className=\"AlertModalSection\"\n            isOpen={modal}\n            toggle={toggleModal}\n            title={title}\n            content={modalContent}\n            link={modalLink}\n            />    */}\n          </BodyContainer> \n               \n        </>\n    );\n}\nexport default CheckList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}